#!/bin/sh
# sh Source code:
#
# Description:
# Return a consistantly formatted current datestamp for inclusions in
# logs and such.
#
# Command syntax: ./datestamp
#        Example:
# ./datestamp
#   20200226-154837
#
# Comments:
# Not slick but handy when you need to enter a log or something and
# want the current information in it.
#
# Additional docs:
#
# Original author: Michael C Tiernan
#            date: Lost in the mists of time. 2019-03-30
#
#+-----------------------------------------------------------+
#| History
#+-----------------------------------------------------------+
#| 20200319-074058 - MCT - Duh. Fixed a typo.
#| 20200226-204939 - MCT - Finished cleaning it up.
#| 20200218-165544 - MCT - Initial release.
#+-----------------------------------------------------------+

###
####~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~

setTZ="local"
dateStamp=""

while getopts "h?zlgu" _passedOpts; do
	case ${_passedOpts} in
		\?|h)
			echo "Usage: $0 [-h|-?] [-z|-l|-g]"
			echo "     : -h = Help! (This message.)"
			echo "     : -? = Help! (This message.)"
			echo "     : -z = Use Zero hour (zulu) timezone."
			echo "     : -g = Use Zero hour (GMT) timezone."
			echo "     : -l = Use local timezone."
			echo "     : -u = Prefix the stamp with the user's ID from the system."
			exit 0
			;;
		z|g)
			setTZ="GMT"
			;;
		l)
			setTZ="local"
			;;
		u)
			dateStamp="${USER:=Unknown_Username}_"
	esac
done

if [ x"${setTZ}" = x"GMT" ] ; then
	dateStamp="${dateStamp}$( date -u +"%Y%m%d-%H%M%S" )"
elif [ x"${setTZ}" = x"local" ]] ; then
	dateStamp="${dateStamp}$( date +"%Y%m%d-%H%M%S" )"
fi
echo "${dateStamp}"

####~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~
###
